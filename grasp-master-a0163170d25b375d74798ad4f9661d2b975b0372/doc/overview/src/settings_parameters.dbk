<?xml version="1.0" encoding="utf-8"?>
<!--
This template is filled by grasp_settings_parameters_doc_generator.sh
and then is used in chapter 5 to show all grasp settings parameters
-->
<!DOCTYPE chapter SYSTEM "common_entities.dtd" >


<table frame="all"
       xmlns="http://docbook.org/ns/docbook"
       xmlns:xl="http://www.w3.org/1999/xlink"
       xml:id="settings-parameters">
    <title>The SDATA main structure</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
        <colspec colnum="1" colwidth="1*" />
        <colspec colnum="2" colwidth="3*" />
        <thead>
            <row>
                <entry>Field Name</entry>
                <entry>Field Content</entry>
            </row>
        </thead>
        <tbody>
            <row><entry>help</entry><entry> Shows this help information</entry></row><row><entry>version</entry><entry> Shows GRASP code version information and stops</entry></row><row><entry>global. resources</entry><entry> Path to framework resources folder</entry></row><row><entry>retrieval. general. path_to_internal_files</entry><entry> Path to internal data files</entry></row><row><entry>retrieval. convergence. stop_before_performing_retrieval</entry><entry> Define how the code is run (true=only forward model, false=full inversion)</entry></row><row><entry>retrieval. convergence. minimization_convention</entry><entry> Minimization in absolute or logarithm space (values: [absolute, logarithm])</entry></row><row><entry>retrieval. convergence. threshold_for_stopping_Q_iterations</entry><entry> Threshold for stopping q - iterations: once the change in the residual smaller than this parameter the iterations are stopped</entry></row><row><entry>retrieval. convergence. scale_for_finite_difference</entry><entry> Defines DL for calculations of derivatives: (f(x+DL)-f(x))/DL</entry></row><row><entry>retrieval. convergence. threshold_for_stopping</entry><entry> Threshold for stopping p - iterations: once the change in the residual smaller than this parameter the iterations stops</entry></row><row><entry>retrieval. convergence. normal_system_solver</entry><entry> Defines the method to solve normal system (values: [simple_linear_iterations, singular_value_decomposition, sparse_matrix_solver])</entry></row><row><entry>retrieval. convergence. maximum_iterations_of_Levenberg-Marquardt</entry><entry> The maximum number of ip iterations where Levenberg-Marquardt correction is applied</entry></row><row><entry>retrieval. convergence. maximum_iterations_for_stopping</entry><entry> Maximum number of iterations performed in the retrieval before stop</entry></row><row><entry>retrieval. convergence. shift_for_applying_logarithm_to_negative_values</entry><entry> This value (usually 1) is added to negative parameters in order to be able to apply logarithmic transformations</entry></row><row><entry>retrieval. regime_of_multipixel_constraints. inversion_regime</entry><entry> Flag for single multi-pixel retrieval (VALUES) (values: [single_pixel, multi_pixel_followed_by_single_pixel, multi_pixel])</entry></row><row><entry>retrieval. regime_of_multipixel_constraints. time_space_groups</entry><entry> Check and use the time-space groups of "same parameters in different pixels" in multipixel inversion</entry></row><row><entry>retrieval. regime_of_multipixel_constraints. time-scale</entry><entry> Constraints for restriction of t-variability in multipixel inversion</entry></row><row><entry>retrieval. regime_of_multipixel_constraints. x-scale</entry><entry> Constraints for restriction of x-variability in multipixel inversion</entry></row><row><entry>retrieval. regime_of_multipixel_constraints. y-scale</entry><entry> Constraints for restriction of y-variability in multipixel inversion</entry></row><row><entry>retrieval. regime_of_measurement_fitting. polarization</entry><entry> 1. -We fit: I, Q, U; 2. - We fit: I, Q/I, U/I; 3. - We fit: I, (Q^2+U^2)^(1/2) (Polarized measurements can be defined in input data as Q and U or P); 4- We fit: I, [(Q^2+U^2)^(1/2)]/I (Polarized measurements can be defined in input data as Q and U or P); 5- We fit: P/I (User has to provide P/I in input data) (values: [absolute_polarization_components, relative_polarization_components, polarized_reflectance, linear_polarization, relative_linear_polarization])</entry></row><row><entry>retrieval. regime_of_measurement_fitting. radiance</entry><entry> 1. -We fit: I; 2. - We fit I/sum(I(:)) (values: [radiances, relative_radiances])</entry></row><row><entry>retrieval. product_configuration. wavelength_indices_for_angstrom</entry><entry> Indices of wavelengths which will be used to calculate Angstrom exponent</entry></row><row><entry>retrieval. product_configuration. aerosol_particulate_matter_diameter</entry><entry> Diameters of aerosol particles in microns which will be used to calculate Particulate Matter (PM)</entry></row><row><entry>retrieval. product_configuration. wavelength_indices_for_ndvi</entry><entry> Indices of wavelengths which will be used to calculate NDVI if it is calculated</entry></row><row><entry>retrieval. phase_matrix. size_binning_method_for_triangle_bins</entry><entry> Determining the scale used for the binning of size distribution (values: [absolute, logarithm])</entry></row><row><entry>retrieval. phase_matrix. number_of_elements</entry><entry> Number of phase matrix elements used in the calculations and retrieval</entry></row><row><entry>retrieval. phase_matrix. kernels_folder</entry><entry> Path to kernels when we retrieve size distribution for triangle bins or lognormal size distribution</entry></row><row><entry>retrieval. phase_matrix. radius. mode[]. bins</entry><entry> Number of triangle bins set for size distribution representation</entry></row><row><entry>retrieval. phase_matrix. radius. mode[]. min</entry><entry> Minimum value of the radius used in the triangle bins</entry></row><row><entry>retrieval. phase_matrix. radius. mode[]. max</entry><entry> Maximum value of the radius used in the triangle bins</entry></row><row><entry>retrieval. edges_size. x</entry><entry> Size of edges width in pixels (it have to be lower than KIEDGE compilation constant)</entry></row><row><entry>retrieval. edges_size. y</entry><entry> Size of edges height in pixels (it have to be lower than KIEDGE compilation constant)</entry></row><row><entry>retrieval. edges_size. t</entry><entry> Size of temporal dimension of edges (it have to be lower than KIEDGE compilation constant)</entry></row><row><entry>retrieval. radiative_transfer. number_of_layers</entry><entry> Maximum number of vertical layers resolved in radiative transfer</entry></row><row><entry>retrieval. radiative_transfer. molecular_profile_vertical_type</entry><entry> It defines which model will be used to describe vertical profile of molecular (Rayleigh) scattering.  Values: 'Exponential' describes molecular density profile at altitude h as exp(h/8)/8, 'Standard_atmosphere' uses standard atmosphere model (pressure and temperature profiles) to calculate molecular density at each altitude.  (values: [exponential, standard_atmosphere])</entry></row><row><entry>retrieval. radiative_transfer. aerosol_profile_vertical_type</entry><entry> It defines which model will be used to describe vertical profile of aerosol distribution.  Values: 'Exponential' describes aerosol concentration profile at altitude h as exp(h/HM)/HM, 'gaussian' uses normal distribution exp(h-HM)/(sqrt(rpi)*sqrt(2. )*sigma) with sigma and HM parameter taken from parameters.  (values: [exponential, gaussian])</entry></row><row><entry>retrieval. radiative_transfer. phase_matrix_truncation</entry><entry> Switch on/off the truncation: the technique to calculate scattering effects from the sharp forward peak of the phase function separately from those of the rest of the phase function.  It doesn't effect considerably the accuracy while provides much faster calculations</entry></row><row><entry>retrieval. radiative_transfer. absolute_error_rt_calculations</entry><entry> Absolute value of truncation threshold of Fourier and order-of-scattering series expansions in radiative transfer calculations</entry></row><row><entry>retrieval. radiative_transfer. reference_plane_for_polarization</entry><entry> Reference plane for polarization calculations (values: [principal_plane, meridian])</entry></row><row><entry>retrieval. radiative_transfer. simulating_observation. order_of_scattering</entry><entry> Regime of scattering used for modeling diffuse radiation observations (values: [multiple_scattering, single_scattering, derivatives])</entry></row><row><entry>retrieval. radiative_transfer. simulating_observation. number_of_gaussian_quadratures_for_expansion_coefficients</entry><entry> Number of Gaussian quadratures for calculating expansion coefficients used for multiple scattering simulations</entry></row><row><entry>retrieval. radiative_transfer. simulating_observation. number_of_guassian_quadratures_for_fourier_expansion_coefficients</entry><entry> Number of Gaussian quadratures for calculating Fourier expansion coefficients used for multiple scattering simulations</entry></row><row><entry>retrieval. radiative_transfer. simulating_observation. number_of_fourier_expansion_coefficients</entry><entry> Number of Fourier expansion coefficients used in multiple scattering simulations</entry></row><row><entry>retrieval. radiative_transfer. simulating_derivatives. order_of_scattering</entry><entry> Regime of scattering used in calculation of radiance derivatives (values: [multiple_scattering, single_scattering, derivatives])</entry></row><row><entry>retrieval. radiative_transfer. simulating_derivatives. number_of_gaussian_quadratures_for_expansion_coefficients</entry><entry> Number of Gaussian quadratures for calculating expansion coefficients used in calculation of radiance derivatives</entry></row><row><entry>retrieval. radiative_transfer. simulating_derivatives. number_of_guassian_quadratures_for_fourier_expansion_coefficients</entry><entry> Number of Gaussian quadratures used for calculating Fourier expansion coefficients used in calculation of radiance derivatives</entry></row><row><entry>retrieval. radiative_transfer. simulating_derivatives. number_of_fourier_expansion_coefficients</entry><entry> Number of Fourier expansion coefficients used in calculation of radiance derivatives</entry></row><row><entry>retrieval. noises. noise[]. standard_deviation_synthetic</entry><entry> Standard deviation of synthetic random noise added to the corresponding inverted data, if value is 0 no synthetic random noise is added</entry></row><row><entry>retrieval. noises. noise[]. error_type</entry><entry> Error type used for definition of covariance matrices used in measurement fitting and in modeling synthetic noise (values: [absolute, relative])</entry></row><row><entry>retrieval. noises. noise[]. standard_deviation</entry><entry> Standard deviation of the random noise expected (this defines the covariance matrix used in fitting)</entry></row><row><entry>retrieval. noises. noise[]. measurement_type[]. type</entry><entry> Type of relevant measurements for applying the noise assumptions (values: [tod, aod, p11, p12, p22, p33, p34, p44, ls, dp, rl, i, q, u, p])</entry></row><row><entry>retrieval. noises. noise[]. measurement_type[]. index_of_wavelength_involved</entry><entry> List of indices of relevant wavelengths for applying the noise assumptions</entry></row><row><entry>retrieval. products. aerosol. chemistry</entry><entry> Retrieve aerosol chemical composition (if retrieved)</entry></row><row><entry>retrieval. products. aerosol. lidar</entry><entry> Retrieve columnar lidar ratios (e. g. , if lidar data are inverted)</entry></row><row><entry>retrieval. products. aerosol. optical_properties</entry><entry> Provide aerosol optical properties</entry></row><row><entry>retrieval. products. aerosol. phase_matrix</entry><entry> Obtain aerosol phase matrix</entry></row><row><entry>retrieval. products. aerosol. refractive_index</entry><entry> Provide aerosol refractive index</entry></row><row><entry>retrieval. products. aerosol. theoretical_bimodal_extinction</entry><entry> Provide estimated aerosol extinction for fine and coarse modes</entry></row><row><entry>retrieval. products. aerosol. theoretical_bimodal_parameters</entry><entry> Provide estimated aerosol microphysical characteristics for fine and coarse modes</entry></row><row><entry>retrieval. products. aerosol. particulate_matter</entry><entry> Obtain aerosol particulate matter estimation at given particle diameters</entry></row><row><entry>retrieval. products. aerosol. type</entry><entry> Obtain aerosol type index i. e.  0-Complex mixture,1-Background,2-Maritime,3-Urbn. Polluted,4-Mixed,5-Urbn. clean,6-Smoke flam. ,7-Smoke.  sold. ,8-Dust</entry></row><row><entry>retrieval. products. clouds. chemistry</entry><entry> Retrieve cloud composition</entry></row><row><entry>retrieval. products. clouds. lidar</entry><entry> Retrieve cloud vertical profiles (e. g. , if lidar or radar data are inverted)</entry></row><row><entry>retrieval. products. clouds. optical_properties</entry><entry> Retrieve cloud optical properties</entry></row><row><entry>retrieval. products. clouds. phase_matrix</entry><entry> Obtain cloud phase matrix</entry></row><row><entry>retrieval. products. clouds. refractive_index</entry><entry> Retrieve cloud refractive index</entry></row><row><entry>retrieval. products. clouds. theoretical_bimodal_extinction</entry><entry> Retrieve estimated cloud extinction for fine and coarse modes</entry></row><row><entry>retrieval. products. clouds. theoretical_bimodal_parameters</entry><entry> Retrieve estimated cloud microphysical characteristics for fine and coarse modes</entry></row><row><entry>retrieval. products. error_estimation. aerosol. lidar</entry><entry> Implement error estimation for aerosol lidar products</entry></row><row><entry>retrieval. products. error_estimation. aerosol. optical_properties</entry><entry> Implement error estimation for optical properties of aerosol products</entry></row><row><entry>retrieval. products. error_estimation. clouds. lidar</entry><entry> Implement error estimation for aerosol lidar products</entry></row><row><entry>retrieval. products. error_estimation. clouds. optical_properties</entry><entry> Implement error estimation for optical properties of aerosol products</entry></row><row><entry>retrieval. products. error_estimation. parameters</entry><entry> Implement error estimation for retrieved parameters</entry></row><row><entry>retrieval. products. forcing. broadband_flux</entry><entry> Provide upward and downward fluxes integrated over the solar spectrum at the user-defined levels for the scenarios with and without aerosols</entry></row><row><entry>retrieval. products. forcing. forcing</entry><entry> Provide aerosol radiative forcing values at the user-defined levels</entry></row><row><entry>retrieval. products. retrieval. fitting</entry><entry> Provide obtained measurement fitting</entry></row><row><entry>retrieval. products. retrieval. parameters</entry><entry> Provide retrieved parameters</entry></row><row><entry>retrieval. products. retrieval. residual</entry><entry> Provide values of obtained residuals</entry></row><row><entry>retrieval. products. surface</entry><entry> Provide surface reflectance products</entry></row><row><entry>retrieval. debug. verbose</entry><entry> Retrieval prints progress information while it is performing the inversion</entry></row><row><entry>retrieval. debug. additional_information</entry><entry> Print some additional information</entry></row><row><entry>retrieval. debug. iteration_information</entry><entry> If it is true it prints retrieval information after each iteration (Only in multipixel scenario)</entry></row><row><entry>retrieval. debug. simulated_sdata_file</entry><entry> Filename where simulated observation data are to be printed.  This option force retrieval. general. stop_before_performing_retrieval=true</entry></row><row><entry>retrieval. debug. path_to_extra_files</entry><entry> Path to folder with retrieval extra files: debug information, extra resources like image. dat files. . . </entry></row><row><entry>retrieval. debug. use_internal_initial_guess</entry><entry> Test option which allows to load different initial guess for each pixel (loading them from image. dat files)</entry></row><row><entry>retrieval. constraints. characteristic[]. type</entry><entry> Type of characteristic (values: [size_distribution_triangle_bins, size_distribution_precalculated_lognormal, size_distribution_lognormal, real_part_of_refractive_index_spectral_dependent, real_part_of_refractive_index_constant, particle_component_volume_fractions_linear_mixture, particle_component_fractions_chemical_mixture, imaginary_part_of_refractive_index_spectral_dependent, imaginary_part_of_refractive_index_constant, sphere_fraction, aspect_ratio_distribution, vertical_profile_parameter_height, vertical_profile_normalized, aerosol_concentration, lidar_calibration_coefficient, vertical_profile_parameter_standard_deviation, surface_land_brdf_ross_li, surface_land_brdf_rpv, surface_land_litvinov, surface_land_litvinov_fast, surface_land_polarized_maignan_breon, surface_land_polarized_litvinov, surface_water_cox_munk_iso, surface_water_cox_munk_ani, surface_water_litvinov])</entry></row><row><entry>retrieval. constraints. characteristic[]. retrieved</entry><entry> Specify if this characteristic will be retrieved or only used in forward model</entry></row><row><entry>retrieval. constraints. characteristic[]. mode[]. initial_guess. value</entry><entry> Initial values for a specific (determined by type) characteristic</entry></row><row><entry>retrieval. constraints. characteristic[]. mode[]. initial_guess. min</entry><entry> Minimum value for the specific characteristic</entry></row><row><entry>retrieval. constraints. characteristic[]. mode[]. initial_guess. max</entry><entry> Maximum value for the specific characteristic</entry></row><row><entry>retrieval. constraints. characteristic[]. mode[]. initial_guess. index_of_wavelength_involved</entry><entry> Indices of Wavelengths associated to the specific characteristic</entry></row><row><entry>retrieval. constraints. characteristic[]. mode[]. single_pixel. a_priori_estimates. lagrange_multiplier</entry><entry> Value of the Lagrange multiplier associated to a priori estimate of the retrieved characteristics (applied in each single pixel)</entry></row><row><entry>retrieval. constraints. characteristic[]. mode[]. single_pixel. smoothness_constraints. difference_order</entry><entry> Order of the derivatives/differences  used for applying a priori smoothness constrains for the retrieved characteristics</entry></row><row><entry>retrieval. constraints. characteristic[]. mode[]. single_pixel. smoothness_constraints. lagrange_multiplier</entry><entry> Value of the Lagrange multiplayer used for applying a priori smoothness constraints for the retrieved characteristics</entry></row><row><entry>retrieval. constraints. characteristic[]. mode[]. multi_pixel. smoothness_constraints. derivative_order_of_X_variability</entry><entry> Order of derivatives/differences  used for applying a priori smoothness constraints on parameter inter-pixel X-variability in multi-pixel retrieval regime</entry></row><row><entry>retrieval. constraints. characteristic[]. mode[]. multi_pixel. smoothness_constraints. lagrange_multiplier_of_X_variability</entry><entry> Value of the Lagrange multiplier used for applying a priori smoothness constraints on parameter inter-pixel X-variability in multi-pixel retrieval regime</entry></row><row><entry>retrieval. constraints. characteristic[]. mode[]. multi_pixel. smoothness_constraints. derivative_order_of_Y_variability</entry><entry> Order of derivatives/differences  used for applying a priori smoothness constraints on parameter inter-pixel Y-variability in multi-pixel retrieval regime</entry></row><row><entry>retrieval. constraints. characteristic[]. mode[]. multi_pixel. smoothness_constraints. lagrange_multiplier_of_Y_variability</entry><entry> Value of the Lagrange multiplier used for applying a priori smoothness constraints on parameter inter-pixel Y-variability in multi-pixel retrieval regime</entry></row><row><entry>retrieval. constraints. characteristic[]. mode[]. multi_pixel. smoothness_constraints. derivative_order_of_T_variability</entry><entry> Order of derivatives/differences  used for applying a priori smoothness constraints on parameter inter-pixel T-variability in multi-pixel retrieval regime</entry></row><row><entry>retrieval. constraints. characteristic[]. mode[]. multi_pixel. smoothness_constraints. lagrange_multiplier_of_T_variability</entry><entry> Value of the Lagrange multiplier used for applying a priori smoothness constraints on parameter inter-pixel T-variability in multi-pixel retrieval regime</entry></row><row><entry>retrieval. untested. ratio[]. value</entry><entry> Values of bins using in retrieved aspect or axis distributions</entry></row><row><entry>settings. debug</entry><entry> Shows settings read to run this program</entry></row><row><entry>settings. strict</entry><entry> Force GRASP to continue when there were parse or validation errors in the settings file</entry></row><row><entry>settings. dump</entry><entry> Stream to dump read settings in short format(experimental)</entry></row><row><entry>settings. long_dump</entry><entry> Stream to dump read settings in long format (experimental)</entry></row><row><entry>input. driver</entry><entry> The driver that will be called for inverting data</entry></row><row><entry>input. file</entry><entry> Name of file(s) which contain input observation</entry></row><row><entry>input. center. latitude</entry><entry> Latitude of the center of tile to invert</entry></row><row><entry>input. center. longitude</entry><entry> Latitude of the center of tile to invert</entry></row><row><entry>input. corner. row</entry><entry> The number of the row for input driver in the native coordinate system of the sensor</entry></row><row><entry>input. corner. column</entry><entry> The number of the column for input driver in the native coordinate system of the sensor</entry></row><row><entry>input. grid_offset. row</entry><entry> Information of the first row in the input grid that will be use for normalizing the output.  If 0 is used the output coordinate reference will be the same than the input.  This offset is for forcing the output row to start at 0 (e. g.  if you put 1, output_row == input_row - 1)</entry></row><row><entry>input. grid_offset. column</entry><entry> Information of the first column in the input grid that will be used for normalizing the output.  If 0 is used the output coordinate reference will be the same than the input.  This offset is for forcing the output column to start at 0 (e. g.  if you put 1, output_column == input_column - 1)</entry></row><row><entry>input. area. width</entry><entry> The width of the covered area in pixels.  It has to be divisible by intput. segment. x value</entry></row><row><entry>input. area. height</entry><entry> The height of the covered area in pixels.  It has to be divisible by intput. segment. y value</entry></row><row><entry>input. time. from</entry><entry> Initial date and time for data processing</entry></row><row><entry>input. time. to</entry><entry> Final date and time for data processing</entry></row><row><entry>input. segment. x</entry><entry> Size of segment width in pixels (it have to be lower than KIX compilation constant)</entry></row><row><entry>input. segment. y</entry><entry> Size of segment height in pixels (it have to be lower than KIY compilation constant)</entry></row><row><entry>input. segment. t</entry><entry> Size of segment temporal dimension (it have to be lower than KITIME compilation constant)</entry></row><row><entry>input. transformer</entry><entry> Name of input data transformer functions to be used after load data</entry></row><row><entry>input. debug. raw_segment</entry><entry> Stream to print raw segment data loaded</entry></row><row><entry>input. debug. clean_segment</entry><entry> Stream to print segment information after clean NaN values</entry></row><row><entry>input. debug. used_files</entry><entry> Stream to print names of the files that have the pixels for inverting</entry></row><row><entry>input. sdata. dump</entry><entry> Stream where to dump sdata information</entry></row><row><entry>input. preload_segment. x</entry><entry> This parameter specifies how many segments in X dimension will be preloaded in each block</entry></row><row><entry>input. preload_segment. y</entry><entry> This parameter specifies how many segments in Y dimension will be preloaded in each block</entry></row><row><entry>input. preload_segment. t</entry><entry> This parameter specifies how many segments in T dimension will be preloaded in each block</entry></row><row><entry>input. driver_settings. sdata. debug</entry><entry> Print debug information from sdata reader subsystem</entry></row><row><entry>output. segment. function</entry><entry> Driver to process output for every single retrieval (show information in screen, perform a map, plotting, . . . )</entry></row><row><entry>output. segment. stream</entry><entry> Stream to dump segment output data</entry></row><row><entry>output. tile. function</entry><entry> Driver to process output after processing complete tile (show information in screen, perform a map, plotting, . . . )</entry></row><row><entry>output. tile. stream</entry><entry> Stream to dump tile output data</entry></row><row><entry>output. current. function</entry><entry> Driver to process output after each retrieval (show information in screen, perform a map, plotting, . . . )</entry></row><row><entry>output. current. stream</entry><entry> Stream to dump current progress information about the retrieval conducted</entry></row><row><entry>controller. segment_range</entry><entry> This parameter allows specifying a range of segments that will be inverted/processed.  If it is a single number a specific retrieval will be processed.  Use -1 as undefined.  For example [15, -1] will process all retrievals starting by the segment #15</entry></row><row><entry>controller. debug. perform_retrieval</entry><entry> Allowing controller to call retrieval.  If this parameter is false the framework will work without inverting the data and it will force to use only none output functions (results will not be printed).  This parameter is useful for debug the framework or prepare input data</entry></row><row><entry>controller. debug. compilation_information</entry><entry> Print compilation information at the beginning of the process</entry></row><row><entry>controller. debug. tracking_memory_stream</entry><entry> Stream where printing all information about memory allocated during the execution (debugging information)</entry></row><row><entry>controller. stream</entry><entry> Stream to dump controller information</entry></row><row><entry>controller. mpi. maximum_job_time</entry><entry> Maximum number of seconds that the master node will wait for a working node for obtaining results.  After this time (specified in seconds) if the job is not finished the controller will kill the task and the segment will be skipped</entry></row><row><entry>controller. mpi. polling_time</entry><entry> Number of seconds that the master node wait after checking the workers </entry></row>                              
        </tbody>
    </tgroup>
</table>

